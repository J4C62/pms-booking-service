buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.tngtech.jgiven:jgiven-gradle-plugin:{version}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.5'
    id 'com.tngtech.jgiven.gradle-plugin' version '2.0.2'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
jacoco {
    toolVersion = "0.8.13"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(false)
        html.required.set(true)
        csv.required.set(false)
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/github/j4c62/pms/booking/infrastructure/provider/grpc/**',
                            '**/BookingApplicationService.class'
                    ])
                })
        )
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.4.4'
    implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
    implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
    implementation 'org.springframework.kafka:spring-kafka'

    runtimeOnly 'io.grpc:grpc-netty-shaded:1.71.0'
    implementation 'io.grpc:grpc-protobuf:1.71.0'
    implementation 'io.grpc:grpc-stub:1.71.0'

    implementation 'io.cloudevents:cloudevents-kafka:4.0.1'
    implementation 'io.cloudevents:cloudevents-json-jackson:4.0.1'

    implementation 'org.postgresql:postgresql:42.6.0'


    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers:3.3.8'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation("org.assertj:assertj-core:4.0.0-M1")
    testImplementation("io.grpc:grpc-testing:1.72.0")

    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    testImplementation 'io.zonky.test:embedded-postgres:2.1.0'
    testImplementation 'io.zonky.test:embedded-database-spring-test:2.6.0'

    testImplementation 'com.tngtech.jgiven:jgiven-junit5:2.0.2'
    testImplementation 'com.tngtech.jgiven:jgiven-html5-report:2.0.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.71.0'
        }
        javapgv {
            artifact = "build.buf.protoc-gen-validate:protoc-gen-validate:1.2.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option '@generated=omit'
            }
        }
    }
}
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    jvmArgs("-Xshare:off")
    jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}"

}
test.finalizedBy(jgivenTestReport)


tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}