services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - pms-network
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: localhost
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - pms-network
  kafka-init:
    image: monasca/kafka-init:latest
    links:
      - kafka
    environment:
      KAFKA_HOST: kafka:9092
      KAFKA_CREATE_TOPICS: >
        booking.created:1:1,booking.updated:1:1,booking.cancelled:1:1,booking-events:1:1

    networks:
      - pms-network

  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: pms_booking
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: secret123
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      - kafka
      - postgres
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pms_booking
      SPRING_DATASOURCE_USERNAME: booking_user
      SPRING_DATASOURCE_PASSWORD: secret123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - pms-network

volumes:
  pgdata:

networks:
  pms-network:
    driver: bridge
