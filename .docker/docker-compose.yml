services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - pms-network
    entrypoint: [ "/bin/bash", "-c" ]
    command: >
      "
      /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh &

      echo 'Waiting for Kafka to start...';
      while ! echo > /dev/tcp/localhost/9092; do sleep 1; done;

      echo 'Creating topics...';
      kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic booking.created;
      kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic booking.updated;
      kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic booking.cancelled;

      wait
      "

  app:
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    depends_on:
      - kafka
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_STREAMS_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - pms-network

volumes:
  kafka_data: {}

networks:
  pms-network:
    driver: bridge
